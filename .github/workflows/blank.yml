# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run against'
        required: false
        default: 'development'
        type: choice
        options:
        - development
      log_level:
        description: 'Log level'
        required: false
        default: 'info'
        type: choice
        options:
        - debug
        - info
        - warning
        - error

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: github.event.pull_request.head.repo.full_name == github.repository || github.event_name != 'pull_request'
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Display workflow inputs when manually triggered
      - name: Display manual trigger inputs
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Log level: ${{ github.event.inputs.log_level }}"

      # Runs a single command using the runners shell.
      - name: Run a one-line script
        run: echo Hello, world!

      # I WANT YOUR SECRETS
      - name: Echo PR Info
        run: echo "This is a PR from ${{ github.actor }}"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo $HOSTNAME
